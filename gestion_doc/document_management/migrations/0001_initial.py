# Generated by Django 5.1.7 on 2025-03-27 13:07

import django.core.validators
import django.db.models.deletion
import uuid
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='CategorieDocument',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date_creation', models.DateTimeField(auto_now_add=True, verbose_name='Date de création')),
                ('date_modification', models.DateTimeField(auto_now=True, verbose_name='Date de modification')),
                ('libelle', models.CharField(max_length=50, unique=True, verbose_name='Libellé')),
                ('code', models.CharField(blank=True, max_length=20, unique=True, verbose_name='Code')),
                ('description', models.TextField(verbose_name='Description')),
                ('type_acces', models.CharField(choices=[('PRIVATE', 'Privé'), ('PUBLIC', 'Public'), ('RESTRICTED', 'Restreint')], default='PRIVATE', max_length=10, verbose_name="Type d'accès")),
            ],
            options={
                'verbose_name': 'Catégorie de document',
                'verbose_name_plural': 'Catégories de documents',
                'ordering': ['libelle'],
            },
        ),
        migrations.CreateModel(
            name='Structure',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date_creation', models.DateTimeField(auto_now_add=True, verbose_name='Date de création')),
                ('date_modification', models.DateTimeField(auto_now=True, verbose_name='Date de modification')),
                ('nom', models.CharField(max_length=100, unique=True, verbose_name='Nom')),
                ('adresse', models.CharField(max_length=255, verbose_name='Adresse')),
                ('description', models.TextField(verbose_name='Description')),
                ('is_active', models.BooleanField(default=True, verbose_name='Actif')),
            ],
            options={
                'verbose_name': 'Structure',
                'verbose_name_plural': 'Structures',
                'ordering': ['nom'],
            },
        ),
        migrations.CreateModel(
            name='Agent',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date_creation', models.DateTimeField(auto_now_add=True, verbose_name='Date de création')),
                ('date_modification', models.DateTimeField(auto_now=True, verbose_name='Date de modification')),
                ('matricule', models.CharField(max_length=8, unique=True, validators=[django.core.validators.RegexValidator(message='Le matricule doit être au format 123456/X', regex='^\\d{6}/[A-Z]$')], verbose_name='Matricule')),
                ('prenom', models.CharField(max_length=50, validators=[django.core.validators.RegexValidator(message='Le prénom ne doit contenir que des lettres, espaces et tirets', regex="^[a-zA-ZÀ-ÿ\\s\\-\\']+$")], verbose_name='Prénom')),
                ('nom', models.CharField(max_length=50, validators=[django.core.validators.RegexValidator(message='Le nom ne doit contenir que des lettres, espaces et tirets', regex="^[a-zA-ZÀ-ÿ\\s\\-\\']+$")], verbose_name='Nom')),
                ('date_naissance', models.DateField(verbose_name='Date de naissance')),
                ('lieu_naissance', models.CharField(max_length=255, verbose_name='Lieu de naissance')),
                ('adresse', models.CharField(max_length=255, verbose_name='Adresse')),
                ('email', models.EmailField(max_length=254, unique=True, verbose_name='Email')),
                ('telephone', models.CharField(max_length=20, unique=True, validators=[django.core.validators.RegexValidator(message='Numéro de téléphone invalide. Format: +221xxxxxxxxx', regex='^(\\+\\d{1,3})?\\d{9,15}$')], verbose_name='Téléphone')),
                ('is_active', models.BooleanField(default=True, verbose_name='Actif')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='agent_profile', to=settings.AUTH_USER_MODEL, verbose_name='Utilisateur')),
            ],
            options={
                'verbose_name': 'Agent',
                'verbose_name_plural': 'Agents',
                'ordering': ['nom', 'prenom'],
            },
        ),
        migrations.CreateModel(
            name='Demande',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date_creation', models.DateTimeField(auto_now_add=True, verbose_name='Date de création')),
                ('date_modification', models.DateTimeField(auto_now=True, verbose_name='Date de modification')),
                ('reference', models.CharField(blank=True, max_length=20, unique=True, verbose_name='Référence')),
                ('objet_demande', models.CharField(max_length=100, verbose_name='Objet')),
                ('message', models.TextField(verbose_name='Message')),
                ('statut', models.CharField(choices=[('EN_ATTENTE', 'En attente'), ('EN_COURS', 'En cours de traitement'), ('VALIDEE', 'Validée'), ('REJETEE', 'Rejetée'), ('ANNULEE', 'Annulée')], default='EN_ATTENTE', max_length=20, verbose_name='Statut')),
                ('date_traitement', models.DateTimeField(blank=True, null=True, verbose_name='Date de traitement')),
                ('demandeur', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='demandes', to=settings.AUTH_USER_MODEL, verbose_name='Demandeur')),
                ('gestionnaire', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='demandes_gerees', to='document_management.agent', verbose_name='Gestionnaire')),
            ],
            options={
                'verbose_name': 'Demande',
                'verbose_name_plural': 'Demandes',
                'ordering': ['-date_creation'],
            },
        ),
        migrations.CreateModel(
            name='DemandeMessage',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date_creation', models.DateTimeField(auto_now_add=True, verbose_name='Date de création')),
                ('date_modification', models.DateTimeField(auto_now=True, verbose_name='Date de modification')),
                ('message', models.TextField(verbose_name='Message')),
                ('motif_rejet', models.TextField(blank=True, null=True, verbose_name='Motif de rejet')),
                ('document_joint', models.FileField(blank=True, null=True, upload_to='demande_documents/', verbose_name='Document joint')),
                ('is_internal', models.BooleanField(default=False, help_text='Message visible uniquement par les gestionnaires', verbose_name='Message interne')),
                ('demande', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='messages', to='document_management.demande', verbose_name='Demande')),
                ('emetteur', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='messages_envoyes', to=settings.AUTH_USER_MODEL, verbose_name='Émetteur')),
            ],
            options={
                'verbose_name': 'Message de demande',
                'verbose_name_plural': 'Messages de demande',
                'ordering': ['date_creation'],
            },
        ),
        migrations.CreateModel(
            name='Document',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date_creation', models.DateTimeField(auto_now_add=True, verbose_name='Date de création')),
                ('date_modification', models.DateTimeField(auto_now=True, verbose_name='Date de modification')),
                ('uuid', models.UUIDField(default=uuid.uuid4, editable=False, unique=True)),
                ('libelle', models.CharField(max_length=100, verbose_name='Libellé')),
                ('reference', models.CharField(blank=True, max_length=50, unique=True, verbose_name='Référence')),
                ('fichier', models.FileField(upload_to='documents/%Y/%m/', verbose_name='Fichier')),
                ('type', models.CharField(choices=[('PDF', 'PDF'), ('JPEG', 'JPEG'), ('PNG', 'PNG'), ('DOCX', 'DOCX'), ('XLSX', 'XLSX')], max_length=10, verbose_name='Type')),
                ('date_expiration', models.DateField(blank=True, null=True, verbose_name="Date d'expiration")),
                ('is_archived', models.BooleanField(default=False, verbose_name='Archivé')),
                ('agent', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='documents', to='document_management.agent', verbose_name='Agent')),
                ('categorie_document', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='documents', to='document_management.categoriedocument', verbose_name='Catégorie')),
            ],
            options={
                'verbose_name': 'Document',
                'verbose_name_plural': 'Documents',
                'ordering': ['-date_creation'],
                'unique_together': {('libelle', 'agent')},
            },
        ),
        migrations.AddField(
            model_name='demande',
            name='documents',
            field=models.ManyToManyField(blank=True, related_name='demandes', to='document_management.document', verbose_name='Documents'),
        ),
        migrations.CreateModel(
            name='Journal',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('action', models.CharField(choices=[('CREATE', 'Création'), ('READ', 'Lecture'), ('UPDATE', 'Modification'), ('DELETE', 'Suppression'), ('LOGIN', 'Connexion'), ('LOGOUT', 'Déconnexion'), ('OTHER', 'Autre')], max_length=10, verbose_name='Action')),
                ('model_name', models.CharField(blank=True, max_length=50, verbose_name='Modèle')),
                ('object_id', models.CharField(blank=True, max_length=50, verbose_name='ID Objet')),
                ('details', models.TextField(blank=True, verbose_name='Détails')),
                ('ip_address', models.GenericIPAddressField(blank=True, null=True, verbose_name='Adresse IP')),
                ('timestamp', models.DateTimeField(auto_now_add=True, verbose_name='Horodatage')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='journal_entries', to=settings.AUTH_USER_MODEL, verbose_name='Utilisateur')),
            ],
            options={
                'verbose_name': 'Journal',
                'verbose_name_plural': 'Journaux',
                'ordering': ['-timestamp'],
            },
        ),
        migrations.CreateModel(
            name='Notification',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('objet', models.CharField(max_length=255, verbose_name='Objet')),
                ('message', models.TextField(verbose_name='Message')),
                ('type', models.CharField(choices=[('INFO', 'Information'), ('SUCCESS', 'Succès'), ('WARNING', 'Avertissement'), ('ERROR', 'Erreur')], default='INFO', max_length=10, verbose_name='Type')),
                ('url', models.CharField(blank=True, help_text='URL associée à la notification', max_length=255, verbose_name='URL')),
                ('date_creation', models.DateTimeField(auto_now_add=True, verbose_name='Date de création')),
                ('is_read', models.BooleanField(default=False, verbose_name='Lue')),
                ('date_lecture', models.DateTimeField(blank=True, null=True, verbose_name='Date de lecture')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='notifications', to=settings.AUTH_USER_MODEL, verbose_name='Utilisateur')),
            ],
            options={
                'verbose_name': 'Notification',
                'verbose_name_plural': 'Notifications',
                'ordering': ['-date_creation'],
            },
        ),
        migrations.CreateModel(
            name='Permission',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('entity', models.CharField(choices=[('DELEGATION', 'Délégation'), ('STRUCTURE', 'Structure'), ('CATEGORIE_DOCUMENTS', 'Catégorie Documents'), ('DOCUMENTS', 'Documents'), ('ROLES', 'Rôles'), ('AGENTS', 'Agents'), ('USERS', 'Utilisateurs'), ('NOTIFICATIONS', 'Notifications'), ('DEMANDES', 'Demandes')], max_length=50, verbose_name='Entité')),
                ('action', models.CharField(choices=[('CREATE', 'Créer'), ('READ', 'Lire'), ('UPDATE', 'Modifier'), ('DELETE', 'Supprimer')], max_length=10, verbose_name='Action')),
                ('description', models.CharField(blank=True, max_length=255, verbose_name='Description')),
            ],
            options={
                'verbose_name': 'Permission',
                'verbose_name_plural': 'Permissions',
                'ordering': ['entity', 'action'],
                'unique_together': {('entity', 'action')},
            },
        ),
        migrations.CreateModel(
            name='Role',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date_creation', models.DateTimeField(auto_now_add=True, verbose_name='Date de création')),
                ('date_modification', models.DateTimeField(auto_now=True, verbose_name='Date de modification')),
                ('libelle', models.CharField(choices=[('ADMIN', 'Administrateur'), ('AGENT', 'Agent'), ('GESTIONNAIRE', 'Gestionnaire'), ('CONTROLLER', 'Contrôleur')], max_length=20, unique=True, verbose_name='Libellé')),
                ('code', models.CharField(blank=True, max_length=30, unique=True, verbose_name='Code')),
                ('niveau', models.PositiveIntegerField(validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(10)], verbose_name='Niveau')),
                ('description', models.TextField(verbose_name='Description')),
                ('permissions', models.ManyToManyField(related_name='roles', to='document_management.permission', verbose_name='Permissions')),
            ],
            options={
                'verbose_name': 'Rôle',
                'verbose_name_plural': 'Rôles',
                'ordering': ['niveau'],
            },
        ),
        migrations.AddField(
            model_name='agent',
            name='role',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='agents', to='document_management.role', verbose_name='Rôle'),
        ),
        migrations.CreateModel(
            name='Delegation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date_creation', models.DateTimeField(auto_now_add=True, verbose_name='Date de création')),
                ('date_modification', models.DateTimeField(auto_now=True, verbose_name='Date de modification')),
                ('nom_delegation', models.CharField(max_length=100, unique=True, verbose_name='Nom de la délégation')),
                ('code', models.CharField(blank=True, max_length=20, null=True, unique=True, verbose_name='Code')),
                ('localisation', models.CharField(max_length=255, verbose_name='Localisation')),
                ('description', models.TextField(verbose_name='Description')),
                ('is_active', models.BooleanField(default=True, verbose_name='Active')),
                ('structures', models.ManyToManyField(related_name='delegations', to='document_management.structure', verbose_name='Structures')),
            ],
            options={
                'verbose_name': 'Délégation',
                'verbose_name_plural': 'Délégations',
                'ordering': ['nom_delegation'],
            },
        ),
        migrations.AddField(
            model_name='agent',
            name='structure',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='agents', to='document_management.structure', verbose_name='Structure'),
        ),
        migrations.CreateModel(
            name='DocumentVersion',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date_creation', models.DateTimeField(auto_now_add=True, verbose_name='Date de création')),
                ('date_modification', models.DateTimeField(auto_now=True, verbose_name='Date de modification')),
                ('fichier', models.FileField(upload_to='document_versions/%Y/%m/', verbose_name='Fichier')),
                ('type', models.CharField(choices=[('PDF', 'PDF'), ('JPEG', 'JPEG'), ('PNG', 'PNG'), ('DOCX', 'DOCX'), ('XLSX', 'XLSX')], max_length=10, verbose_name='Type')),
                ('version_number', models.PositiveIntegerField(default=1, verbose_name='Numéro de version')),
                ('change_summary', models.TextField(blank=True, verbose_name='Résumé des modifications')),
                ('created_by', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='document_versions', to=settings.AUTH_USER_MODEL, verbose_name='Créé par')),
                ('document', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='versions', to='document_management.document', verbose_name='Document')),
            ],
            options={
                'verbose_name': 'Version de document',
                'verbose_name_plural': 'Versions de documents',
                'ordering': ['-date_creation'],
                'unique_together': {('document', 'version_number')},
            },
        ),
    ]
